System.register(["react","oidc-client-ts"],function(o){"use strict";var c,A,E,m,S,f,g,w;return{setters:[function(a){c=a.default,A=a.useState,E=a.useReducer,m=a.useMemo,S=a.useRef,f=a.useEffect,g=a.useCallback},function(a){w=a.UserManager}],execute:function(){o("withAuth",V);var a=o("AuthContext",c.createContext(void 0));a.displayName="AuthContext";var O={isLoading:!0,isAuthenticated:!1},M=(r,t)=>{switch(t.type){case"INITIALISED":case"USER_LOADED":return{...r,user:t.user,isLoading:!1,isAuthenticated:t.user?!t.user.expired:!1,error:void 0};case"USER_UNLOADED":return{...r,user:void 0,isAuthenticated:!1};case"NAVIGATOR_INIT":return{...r,isLoading:!0,activeNavigator:t.method};case"NAVIGATOR_CLOSE":return{...r,isLoading:!1,activeNavigator:void 0};case"ERROR":return{...r,isLoading:!1,error:t.error};default:return{...r,isLoading:!1,error:new Error(`unknown type ${t.type}`)}}},C=o("hasAuthParams",(r=window.location)=>{let t=new URLSearchParams(r.search);return!!((t.get("code")||t.get("error"))&&t.get("state")||(t=new URLSearchParams(r.hash.replace("#","?")),(t.get("code")||t.get("error"))&&t.get("state")))}),b=r=>t=>t instanceof Error?t:new Error(r),D=b("Login failed"),_=["clearStaleState","querySessionStatus","revokeTokens","startSilentRenew","stopSilentRenew"],T=["signinPopup","signinSilent","signinRedirect","signoutPopup","signoutRedirect"],p=r=>()=>{throw new Error(`UserManager#${r} was called from an unsupported context. If this is a server-rendered page, defer this call with useEffect() or pass a custom UserManager implementation.`)},x=typeof window>"u"?null:w,K=o("AuthProvider",r=>{const{children:t,onSigninCallback:u,skipSigninCallback:v,onRemoveUser:h,onSignoutRedirect:U,onSignoutPopup:y,implementation:I=x,userManager:L,...P}=r,[n]=A(()=>L??(I?new I(P):{settings:P})),[j,i]=E(M,O),d=m(()=>Object.assign({settings:n.settings,events:n.events},Object.fromEntries(_.map(e=>{var s,l;return[e,(l=(s=n[e])==null?void 0:s.bind(n))!=null?l:p(e)]})),Object.fromEntries(T.map(e=>[e,n[e]?async(...s)=>{i({type:"NAVIGATOR_INIT",method:e});try{return await n[e](...s)}finally{i({type:"NAVIGATOR_CLOSE"})}}:p(e)]))),[n]),N=S(!1);f(()=>{!n||N.current||(N.current=!0,(async()=>{let e=null;try{C()&&!v&&(e=await n.signinCallback(),u&&u(e)),e=e||await n.getUser(),i({type:"INITIALISED",user:e})}catch(s){i({type:"ERROR",error:D(s)})}})())},[n,v,u]),f(()=>{if(!n)return;const e=R=>{i({type:"USER_LOADED",user:R})};n.events.addUserLoaded(e);const s=()=>{i({type:"USER_UNLOADED"})};n.events.addUserUnloaded(s);const l=R=>{i({type:"ERROR",error:R})};return n.events.addSilentRenewError(l),()=>{n.events.removeUserLoaded(e),n.events.removeUserUnloaded(s),n.events.removeSilentRenewError(l)}},[n]);const k=g(n?()=>n.removeUser().then(h):p("removeUser"),[n,h]),$=g(e=>d.signoutRedirect(e).then(U),[d.signoutRedirect,U]),z=g(e=>d.signoutPopup(e).then(y),[d.signoutPopup,y]);return c.createElement(a.Provider,{value:{...j,...d,removeUser:k,signoutRedirect:$,signoutPopup:z}},t)}),G=o("useAuth",()=>{const r=c.useContext(a);if(!r)throw new Error("AuthProvider context is undefined, please verify you are calling useAuth() as child of a <AuthProvider> component.");return r});function V(r){const t=`withAuth(${r.displayName||r.name})`,u=v=>{const h=G();return c.createElement(r,{...v,auth:h})};return u.displayName=t,u}}}});
